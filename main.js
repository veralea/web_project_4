!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n,r,o=this,i=e.cardData,a=e.templateSelector,u=e.handleCardClick,c=e.handleDeleteClick,s=e.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=function(){o._element.remove(),o._element=null},(n="_deleteCard")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._cardData=i,this._link=i.link,this._name=i.name,this._likes=i.likes,this._templateSelector=a,this._handleCardClick=u,this._handleDeleteClick=c,this._handleLikeClick=s}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this;this._element.querySelector(".card__delete-button").addEventListener("click",(function(e){t._handleDeleteClick()})),this._element.querySelector(".card__like-button").addEventListener("click",(function(e){var n=e.target.classList.contains("card__like-button_state_active")?"DELETE":"PUT";t._handleLikeClick(n),e.target.classList.toggle("card__like-button_state_active")})),e.addEventListener("click",(function(e){return t._handleCardClick(e,t._cardData)}))}},{key:"createCard",value:function(e){this._element=this._getTemplate();var t=this._element.querySelector(".card__picture");return t.setAttribute("src",this._link),t.setAttribute("alt",this._name),this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__like-counter").textContent=this._likes.length,e&&(this._element.querySelector(".card__delete-button").style.display="block"),this._setEventListeners(t),this._element}},{key:"setLikes",value:function(e){this._element.querySelector(".card__like-counter").textContent=e.length}}])&&e(n.prototype,r),t}(),n=t;function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){this._container.innerHTML="",e.forEach(this._renderer)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&r(t.prototype,n),e}(),i={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},a="#card-template";function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(".".concat(t)),this._profileJob=document.querySelector(".".concat(n)),this._profileAvatar=document.querySelector(".".concat(r))}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent.trim(),job:this._profileJob.textContent.trim()}}},{key:"setUserInfo",value:function(e){this._profileName.textContent=e.name,this._profileJob.textContent=e.about,this._profileAvatar.style.backgroundImage="url(".concat(e.avatar,")"),this.id=e._id}},{key:"setAvatar",value:function(e){this._profileAvatar.style.backgroundImage="url(".concat(e,")")}}])&&u(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(".".concat(t))}var t,n;return t=e,(n=[{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&s(t.prototype,n),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},h(e,t,n||e)}function d(e,t){return d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},d(e,t)}function _(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e,t){var n,r=e.handleFormSubmit,o=e.validator;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._handleFormSubmit=r,n._validator=o,n._form=n._popup.querySelector("form"),n._inputsList=n._popup.querySelectorAll("input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return Array.from(this._inputsList).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),h(y(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._form.reset(),h(y(a.prototype),"close",this).call(this)}},{key:"open",value:function(e){this._validator(),Array.from(this._inputsList).forEach((function(t){t.value=e[t.name]})),h(y(a.prototype),"open",this).call(this)}}])&&p(t.prototype,n),a}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},g(e,t,n||e)}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function E(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name,r=this._popup.querySelector("img"),o=this._popup.querySelector("p");r.setAttribute("src",t),r.setAttribute("alt",n),o.textContent=n,g(S(a.prototype),"open",this).call(this)}}])&&b(t.prototype,n),a}(l);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._settings=n}var t,n;return t=e,(n=[{key:"_resetFormValidation",value:function(){var e=this;this._formElement.reset(),this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_getSubmitButton",value:function(){return this._formElement.querySelector(this._settings.submitButtonSelector)}},{key:"_getInputList",value:function(){return Array.from(this._formElement.querySelectorAll(this._settings.inputSelector))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_showInputError",value:function(e){e.classList.add(this._settings.inputErrorClass),e.nextElementSibling.textContent=e.validationMessage,e.nextElementSibling.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){e.classList.remove(this._settings.inputErrorClass),e.nextElementSibling.classList.remove(this._settings.errorClass),e.nextElementSibling.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._inputList=this._getInputList(),this._buttonElement=this._getSubmitButton(),this._resetFormValidation(),this._setEventListeners()}}])&&C(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"updateProfile",value:function(e){var t=this,n=e.userData;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n.name,about:n.job})}).then((function(e){return t._getResponseData(e)}))}},{key:"addNewCard",value:function(e){var t=this,n=e.cardData;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:n.name,link:n.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponseData(e)}))}},{key:"changeLikes",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:t,headers:this._headers}).then((function(e){return n._getResponseData(e)}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._getResponseData(e)}))}}])&&O(t.prototype,n),e}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},R(e,t,n||e)}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function q(e,t){if(t&&("object"===D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector("form"),t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._id)})),R(T(a.prototype),"setEventListeners",this).call(this)}}])&&P(t.prototype,n),a}(l),A=function(e,t){t._form.submit.textContent=e?"Saving...":"Save"},U=document.querySelector(".page"),B=U.querySelector(".profile__edit-button"),F=U.querySelector(".profile__add-button"),V=U.querySelector(".profile__avatar-cover"),N=new L(document.querySelector(".popup__form_type_add"),i);N.enableValidation();var J=new L(document.querySelector(".popup__form_type_edit"),i);J.enableValidation();var H=new L(document.querySelector(".popup__form_type_update-avatar"),i);H.enableValidation();var M=new j({baseUrl:"https://around.nomoreparties.co/v1/".concat("group-12"),headers:{authorization:"79e7d2e5-160a-498a-95ef-9351a4cf4856","Content-Type":"application/json"}}),z=new c("profile__name","profile__job","profile__avatar"),G=new o({renderer:function(e){var t=new n({cardData:e,templateSelector:a,handleCardClick:Q,handleDeleteClick:X,handleLikeClick:Y}).createCard(e.owner._id===z.id);G.addItem(t)}},".cards-grid");M.getInitialUserInfo().then((function(e){z.setUserInfo(e)})).catch((function(e){return console.log(e)})),M.getInitialCards().then((function(e){return G.renderItems(e.reverse())})).catch((function(e){return console.log(e)}));var K=new w("popup_type_img");function Q(e,t){e.preventDefault(),K.open({link:t.link,name:t.name}),K.setEventListeners()}var W=new x("popup_type_delete");function X(){var e=this;W._cardData=this._cardData,console.log(W._cardData),W._id=W._cardData._id,console.log(W._id),W._handleFormSubmit=function(){M.deleteCard(e._cardData._id).then((function(){return e._deleteCard()})).catch((function(e){return console.log(e)})).finally((function(){W.close()}))},W.open(),W.setEventListeners()}function Y(e){var t=this;M.changeLikes(this._cardData._id,e).then((function(e){t.setLikes(e.likes)})).catch((function(e){return console.log(e)}))}var Z=new v({handleFormSubmit:function(e){A(!0,Z),M.updateProfile({userData:e}).then((function(e){z.setUserInfo(e),Z.close()})).catch((function(e){return console.log(e)})).finally((function(){A(!1,Z)}))},validator:function(){return J._resetFormValidation()}},"popup_type_edit");Z.setEventListeners();var $=new v({handleFormSubmit:function(e){A(!0,$),M.addNewCard({cardData:e}).then((function(e){return new n({cardData:e,templateSelector:a,handleCardClick:Q,handleDeleteClick:X,handleLikeClick:Y}).createCard(e.owner._id===z.id)})).then((function(e){G.addItem(e),$.close()})).catch((function(e){return console.log(e)})).finally((function(){A(!1,$)}))},validator:function(){return N._resetFormValidation()}},"popup_type_add");$.setEventListeners();var ee=new v({handleFormSubmit:function(e){A(!0,ee),M.updateAvatar(e.avatar).then((function(e){ee.close(),z.setAvatar(e.avatar)})).catch((function(e){return console.log(e)})).finally((function(){A(!1,ee)}))},validator:function(){return H._resetFormValidation()}},"popup_type_update-avatar");ee.setEventListeners(),B.addEventListener("click",(function(){var e=z.getUserInfo();Z.open(e)})),F.addEventListener("click",(function(){$.open({name:"",link:""})})),V.addEventListener("click",(function(){ee.open({avatar:""})}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,